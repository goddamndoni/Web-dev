import { ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, QueryList, SimpleChanges, TemplateRef } from '@angular/core';
import { Orientation, ThumbTemplateContext } from '../../core';
import { Aria } from '../../core/aria';
import { GalleryItemEvent, GalleryItemInternal } from '../../core/gallery-item';
import * as i0 from "@angular/core";
export declare class ThumbsComponent implements OnChanges, OnDestroy {
    private cd;
    private elRef;
    items: GalleryItemInternal[];
    selectedIndex: number;
    aria?: Aria;
    orientation?: Orientation;
    arrows?: boolean;
    arrowSlideByLength?: number;
    autoScroll?: boolean;
    thumbTemplate?: TemplateRef<ThumbTemplateContext>;
    arrowTemplate?: TemplateRef<never>;
    errorTemplate?: TemplateRef<never>;
    scrollBehavior?: ScrollBehavior;
    isRtl?: boolean;
    thumbClick: EventEmitter<GalleryItemEvent>;
    thumbHover: EventEmitter<GalleryItemEvent>;
    thumbListRef: ElementRef<HTMLElement>;
    thumbsRef: QueryList<ElementRef<HTMLElement>>;
    showStartArrow: boolean;
    showEndArrow: boolean;
    private arrowObserver?;
    private scrollId?;
    get cssClass(): string;
    private get hostOffsetAxis();
    private get scrollKey();
    private get thumbsEmpty();
    private get vertical();
    constructor(cd: ChangeDetectorRef, elRef: ElementRef<HTMLElement>);
    ngOnChanges({ arrows, items }: SimpleChanges): void;
    ngOnDestroy(): void;
    slide(direction: number): void;
    centerThumbIfNeeded(index: number): void;
    select(index: number): void;
    emitEvent(index: number, item: GalleryItemInternal, event: Event, emitter: EventEmitter<GalleryItemEvent>): void;
    onLoadChange(item: GalleryItemInternal, success: boolean): void;
    private scroll;
    private shiftByDelta;
    private onArrowsObserved;
    private observeArrows;
    private setObservedArrows;
    private unobserveArrows;
    static ɵfac: i0.ɵɵFactoryDeclaration<ThumbsComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ThumbsComponent, "thumbs", never, { "items": { "alias": "items"; "required": false; }; "selectedIndex": { "alias": "selectedIndex"; "required": false; }; "aria": { "alias": "aria"; "required": false; }; "orientation": { "alias": "orientation"; "required": false; }; "arrows": { "alias": "arrows"; "required": false; }; "arrowSlideByLength": { "alias": "arrowSlideByLength"; "required": false; }; "autoScroll": { "alias": "autoScroll"; "required": false; }; "thumbTemplate": { "alias": "thumbTemplate"; "required": false; }; "arrowTemplate": { "alias": "arrowTemplate"; "required": false; }; "errorTemplate": { "alias": "errorTemplate"; "required": false; }; "scrollBehavior": { "alias": "scrollBehavior"; "required": false; }; "isRtl": { "alias": "isRtl"; "required": false; }; }, { "thumbClick": "thumbClick"; "thumbHover": "thumbHover"; }, never, never, true, never>;
}
